# Generated by Django 4.2 on 2023-05-01 15:34

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Baits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Bait name')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('price', models.FloatField(validators=[django.core.validators.MaxValueValidator(100000), django.core.validators.MinValueValidator(0)])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bait',
                'verbose_name_plural': 'Baits',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Fish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Fish name')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('average_weight', models.FloatField(validators=[django.core.validators.MaxValueValidator(200.0), django.core.validators.MinValueValidator(0.1)], verbose_name='Average weight')),
                ('baits', models.ManyToManyField(to='query_tool.baits')),
            ],
            options={
                'verbose_name': 'Fish',
                'verbose_name_plural': 'Fish',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FishCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='Fish category')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Fish category',
                'verbose_name_plural': 'Fish categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SpotCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='Spot category')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Spot category',
                'verbose_name_plural': 'Spot categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Spots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Spot name')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('location', models.CharField(max_length=50)),
                ('max_depth', models.FloatField(validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(1)], verbose_name='Max depth')),
                ('fish', models.ManyToManyField(to='query_tool.fish')),
                ('spot_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='query_tool.spotcategory')),
            ],
            options={
                'verbose_name': 'Spot',
                'verbose_name_plural': 'Spots',
                'ordering': ['title'],
            },
        ),
        migrations.AddField(
            model_name='fish',
            name='fish_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='query_tool.fishcategory'),
        ),
    ]
